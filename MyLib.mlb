local
  $(SML_LIB)/basis/basis.mlb

  (* Used by Sequence.shuffle *)
  $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb

  bootstrap/Util.sml
  bootstrap/Iso.sml
  bootstrap/Emb.sml
  bootstrap/Lazy.sml
  bootstrap/Seq.sml
  bootstrap/Stream.sml
  bootstrap/Source.sml
  bootstrap/ViewL.sml
  bootstrap/ViewR.sml
  bootstrap/Either.sml
  bootstrap/Product.sml
  bootstrap/Types.sml
in
Infixes.sml

io/Scan.sig                  (**) io/Scan.sml
io/Nacs.sig                  (**) io/Nacs.sml

class/Func.sig               (**) class/Func.fun
class/Pointed.sig            (**) class/Pointed.fun
class/App.sig                (**) class/App.fun
class/Monad.sig              (**) class/Monad.fun
class/Alt.sig                (**) class/Alt.fun
class/MonadP.sig             (**) class/MonadP.fun
class/MonadState.sig         (**) class/MonadState.fun
class/MonadError.sig         (**) class/MonadError.fun
class/Foldable.sig           (**) class/Foldable.fun
class/MonoMonad.sig          (**) class/MonoMonad.fun
class/MonoMonadP.sig         (**) class/MonoMonadP.fun
class/MonoFoldable.sig       (**) class/MonoFoldable.fun
class/MonadTrans.sig         (**) class/MonadTrans.fun
class/Enumerable.sig         (**) class/Enumerable.fun
class/Unfoldable.sig         (**) class/Unfoldable.fun
class/Scannable.sig          (**) class/Scannable.fun
class/Nacsable.sig           (**) class/Nacsable.fun
class/Ordered.sig            (**) class/Ordered.fun
(* class/Sequence.sig           (\**\) class/Sequence.fun *)

(* arrows/Fn.sig                (\**\) arrows/Fn.sml *)
(* arrows/Effect.sig *)
(* arrows/Thunk.sig *)
(* (\* arrows/Cont.sig *\) *)
(* arrows/Cmp.sig *)
(* arrows/UnOp.sig *)
(* arrows/BinOp.sig *)
arrows/UnPred.sig            (**) arrows/UnPred.sml
(* arrows/BinPred.sig *)
(* arrows/BinFn.sig *)

(* util/Fixpoint.sig *)
(* util/Lazy.sig *)
(* util/Tie.sig *)
(* util/Emb.sig *)
(* util/Iso.sig *)

(* data/ViewL.sig *)
(* data/ViewR.sig *)
(* data/Exn.sig *)
(* data/Univ.sig *)
(* data/Void.sig *)
(* data/Unit.sig *)
(* data/Bool.sig *)
(* data/Order.sig *)
(* (\* data/Option.sig              (\\**\\) data/Option.sml *\) *)
(* (\* data/Either.sig              (\\**\\) data/Either.sml *\) *)
(* (\* data/Pair.sig                (\\**\\) data/Pair.sml *\) *)
(* (\* data/Product.sig             (\\**\\) data/Product.sml *\) *)

(* (\* control/State.sig            (\\**\\) control/MkState.fun *\) *)
(* (\* control/StateT.sig           (\\**\\) control/MkStateT.fun *\) *)
(* control/ErrorT.sig           (\**\) control/MkErrorT.fun *)
(*                              (\**\) control/Identity.sml *)
(* control/Iter.sig             (\**\) control/Iter.sml *)
control/Exit.sig             (**) control/Exit.sml

io/Reader.sig                (**) io/Reader.sml
io/Writer.sig                (**) io/Writer.sml
(* io/TextIO.sig *)
(* io/IO.sig *)

(* os/OS.sig *)
(* os/File.sig *)
(* os/Path.sig *)
(* os/Dir.sig *)

(* text/Word.sig *)
(* text/String.sig *)
(* text/Char.sig *)

(* misc/Time.sig *)
(* misc/Date.sig *)
(* misc/Benchmark.sig *)
(* misc/Basic.sig               (\**\) misc/Basic.sml *)

(* (\* misc/Pretty.sig              (\\**\\) misc/Pretty.sml *\) *)
(* (\* misc/Layout.sig              (\\**\\) misc/Layout.sml *\) *)

(* struct/Sequence.sig          (\**\) struct/Seq.sml *)
(*                              (\**\) struct/CList.sml *)
(* struct/Stream.sig            (\**\) struct/Stream.sml *)
(* struct/List.sig              (\**\) struct/List.sml *)

(* struct/Map.sig               (\**\) struct/Map.fun *)
(*                              (\**\) struct/RedBlackMap.fun *)
(* (\* Default implementations    **\) struct/MkMap.fun *)
(* (\*                            **\) struct/IntMap.sml *)
(* (\*                            **\) struct/Dictionary.sml *)
(* (\*                            **\) struct/CharMap.sml *)

(* struct/Set.sig               (\**\) struct/Set.fun *)
(*                              (\**\) struct/RedBlackSet.fun *)
(*                              (\**\) struct/TrieSet.fun *)
(* (\* Default implementations    **\) struct/MkSet.fun *)
(*                              (\**\) struct/IntSet.sml *)
(*                              (\**\) struct/StringSet.sml *)
(*                              (\**\) struct/CharSet.sml *)

(* struct/Heap.sig              (\**\) struct/Heap.fun *)
(* struct/Queue.sig             (\**\) struct/Queue.fun *)
(* struct/Deque.sig             (\**\) struct/Deque.fun *)
(* struct/Tree.sig              (\**\) struct/Tree.fun *)
(* (\*                              (\\**\\) struct/TrieOrderedMap.sml *\) *)

(* (\*                              (\\**\\) struct/PairingHeap.sml *\) *)
(* (\* (\\* Default implementations    **\\) struct/MkHeap.sml *\) *)
(* (\* (\\*                            **\\) struct/IntMinHeap.sml *\) *)
(* (\* (\\*                            **\\) struct/IntMaxHeap.sml *\) *)
(* (\* (\\*                            **\\) struct/StringMinHeap.sml *\) *)
(* (\* (\\*                            **\\) struct/StringMaxHeap.sml *\) *)
(* (\* (\\*                            **\\) struct/CharMinHeap.sml *\) *)
(* (\* (\\*                            **\\) struct/CharMaxHeap.sml *\) *)
(* (\*                              (\\**\\) struct/MkQueue.fun *\) *)
(* (\*                              (\\**\\) struct/MkDeque.fun *\) *)
(* (\*                              (\\**\\) struct/MkTree.fun *\) *)

(* (\* libs/generic/Generic.sig     (\\**\\) libs/generic/Generic.sml *\) *)
(* (\*                              (\\**\\) libs/generic/Show.sml *\) *)
(* (\*                              (\\**\\) libs/generic/Compare.sml *\) *)
(* (\*                              (\\**\\) libs/generic/Read.sml *\) *)
(* (\*                              (\\**\\) libs/generic/Write.sml *\) *)
(* (\*                              (\\**\\) libs/generic/Hash.sml *\) *)
(* (\*                              (\\**\\) libs/generic/Arbitrary.sml *\) *)
(* (\*                              (\\**\\) libs/generic/Dynamic.sml *\) *)
(* (\*                              (\\**\\) libs/generic/Enum.sml *\) *)
(* (\*                              (\\**\\) libs/generic/Size.sml *\) *)

(* (\* algorithms/graph/TopSort.sig (\\**\\) algorithms/graph/TopSort.sml *\) *)

(* (\* libs/Parser.sig              (\\**\\) libs/Parser.sml *\) *)
(* (\*                              (\\**\\) libs/Parse.sml *\) *)
(* (\*                              (\\**\\) libs/Scan.sml *\) *)
(* (\* libs/JSON.sig                (\\**\\) libs/JSON.sml *\) *)
(* (\* generic/... *\) *)

end
